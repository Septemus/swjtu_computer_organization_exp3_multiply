 module exp3_1(
    input clk,
    input rst_n,
//    input  [8:0] multiplier, // 乘数，存放在 C 寄存器中
//    input  [8:0] multiplicand, // 被乘数，存放在 B 寄存器中
//	 output reg[16:0] product,
//	 output reg[7:0]a_reg,
//	 output reg[7:0]b_reg,
//	 output reg[7:0]c_reg,
//	 output reg[3:0]cr_reg,
	 output reg hassetnum
//    output  [7:0] codeout  
);
//
//reg [7:0] a_reg;  // A 寄存器，存放部分积，初始值为 0
//reg [7:0] c_reg;  // C 寄存器，存放乘数，初始值为 multiplier
//reg [7:0] b_reg;
//reg [3:0] cr_reg; // CR 寄存器，乘法步数计数器，初始值为 0

//initial
//begin
//	a_reg<=0;
//	c_reg<=8'b1111_1111;
//	b_reg<=8'b0101_0101;
//	cr_reg<=0;
//	product<=0;
//end
initial
begin
//	cr_reg<=4'b0000;
	hassetnum<=1'b0;
end
always @(posedge clk or posedge rst_n) 
begin
    if (rst_n) 
	 begin
//		a_reg<=0;
//		c_reg<=multiplier[7:0];
//		b_reg<=multiplicand[7:0];
//		cr_reg<=0;
//		product<=0;
		hassetnum<=1'b1;
    end
	 else if(!hassetnum)
	 begin
//		a_reg<=0;
//		c_reg<=multiplier[7:0];
//		b_reg<=multiplicand[7:0];
//		cr_reg<=0;
//		product<=0;
		hassetnum<=1'b1;
	 end
//	 else if(cr_reg==4'b1000)
//	 begin
//		cr_reg<=cr_reg;
//		product<={multiplicand[8]^multiplier[8],a_reg,c_reg};
//	 end
//	 else 
//	 begin
//		if(c_reg&1)
//		begin
//			a_reg=a_reg+b_reg;
//		end
//		c_reg={a_reg&1,c_reg[7:1]};
//		a_reg=a_reg>>1;
//		cr_reg=cr_reg+1;
//	 end
end
endmodule
